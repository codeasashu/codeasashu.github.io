<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ashutosh Chaudhary</title>
    <description>My Personal Blog</description>
    <link>http://aboutashu.com/</link>
    <atom:link href="http://aboutashu.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 29 May 2016 14:21:56 +0530</pubDate>
    <lastBuildDate>Sun, 29 May 2016 14:21:56 +0530</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>WordPress: HTML encoded image alternate text</title>
        <description>&lt;p&gt;One problem with wordpress is that it doesn’t allow HTML encoded strings in image alternate text. Even if you provide your image alternate text as a HTML string, wordpress will covert it down to plaintext, removing any HTML attributes and the image will then have only plaintext of your alternate text.&lt;/p&gt;

&lt;p&gt;i.e even if you write your image alternate section such as this&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hey, I am &lt;span class=&quot;nt&quot;&gt;&amp;lt;i&amp;gt;&lt;/span&gt; italic text &lt;span class=&quot;nt&quot;&gt;&amp;lt;/i&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;this would output in frontend as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hey, I am italic text
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is not cool. Sometimes, you rely on some plugins which reads image alternate text and display below the images in pretty cool style.&lt;/p&gt;

&lt;h2 id=&quot;options&quot;&gt;Options&lt;/h2&gt;

&lt;p&gt;One option which came to my mind is to leave alternate text blank and provide the image &lt;em&gt;caption&lt;/em&gt; in HTML format. For ex, check below image:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/wordpess_caption.png&quot; alt=&quot;Wp Caption&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Wordpres has this feature where if you leave the alternate text blank, it would fill the caption text in alternate text. I thought it would work since I can provide HTML in captions. But again, the same problem. Captions were turned back into plaintext.&lt;/p&gt;

&lt;p&gt;Thus, for the above image, the output was something like this:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://yourwebsite.com/path/to/image/image.jpg&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;alt=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello, this is sample caption. This text is in bold&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;the-solution&quot;&gt;The solution&lt;/h3&gt;

&lt;p&gt;Luckily, WordPress provides image hooks which you can use to modify image attributes on the fly. The one which I want to use is &lt;a href=&quot;https://developer.wordpress.org/reference/hooks/wp_get_attachment_image_attributes/&quot;&gt;wp_get_attachment_image_attributes&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We can use this hook to see what image attribute we want to change, read its value, format it in HTML and return back our new value.&lt;/p&gt;

&lt;p&gt;Hence, open up your theme’s &lt;code class=&quot;highlighter-rouge&quot;&gt;functions.php&lt;/code&gt; and create a new function where you want to attach this hook. I am calling the function &lt;code class=&quot;highlighter-rouge&quot;&gt;custom_filter_gallery_img_atts&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Filename: functions.php
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;custom_filter_gallery_img_atts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$atts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$attachment&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$atts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get_post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$attachment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;post_excerpt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//This returns image caption (which is in HTML format)
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$atts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  
&lt;span class=&quot;nx&quot;&gt;add_filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wp_get_attachment_image_attributes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;custom_filter_gallery_img_atts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What we did above is attaching &lt;code class=&quot;highlighter-rouge&quot;&gt;wp_get_attachment_image_attributes&lt;/code&gt; to our custom defined function &lt;code class=&quot;highlighter-rouge&quot;&gt;custom_filter_gallery_img_atts&lt;/code&gt; inside which we read the image caption and stored the value in image alternate text.&lt;/p&gt;

&lt;p&gt;Hope you enjoyed the article. If you have any doubts, please comment below. See you soon.&lt;/p&gt;
</description>
        <pubDate>Sat, 07 May 2016 12:50:59 +0530</pubDate>
        <link>http://aboutashu.com/wordpress-html-encoded-image-alternate-text/</link>
        <guid isPermaLink="true">http://aboutashu.com/wordpress-html-encoded-image-alternate-text/</guid>
        
        <category>filter</category>
        
        <category>image</category>
        
        <category>wordpress</category>
        
        
        <category>Wordpress</category>
        
      </item>
    
      <item>
        <title>Implement XMPP chat client in Android &amp;#8211; Part 1</title>
        <description>&lt;p&gt;In the &lt;a href=&quot;http://aboutashu.com/blog/xmpp-chat-server/&quot;&gt;last post&lt;/a&gt; of this series, I talked about setting up XMPP based chat server, using ejabberd. In this post, I will be talking about how to implement XMPP chat client in android and let two users talk to each other. After reading this post, you’ll be able to&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Implement chat system such as whatsapp in your own android app&lt;/li&gt;
  &lt;li&gt;Allow multiple users to chat with each other&lt;/li&gt;
  &lt;li&gt;Making the chat as service so that chat messages still come through even while app is in background&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;xmpp-client&quot;&gt;XMPP Client&lt;/h2&gt;

&lt;p&gt;XMPP Clients is a software or application which allows you to connect to XMPP servers for instant messaging with other people. Simple enough!! If you are a frequent internet user, you must’ve used one to many XMPP clients such as pidgin, gtalk, Yahoo! IM etc. which allows you to send Instant Message to other users you are connected to. What we will do this in post is to make one such client in android.&lt;/p&gt;

&lt;h2 id=&quot;what-you-will-need&quot;&gt;What You will need&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;An android IDE for app development. While I prefer &lt;a href=&quot;http://developer.android.com/sdk/index.html&quot;&gt;Android Studio&lt;/a&gt;, while &lt;a href=&quot;https://eclipse.org/&quot;&gt;Eclipse&lt;/a&gt; also does the job.&lt;/li&gt;
  &lt;li&gt;Decent Working internet.&lt;/li&gt;
  &lt;li&gt;1-2 hours patience&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;starting-the-project&quot;&gt;Starting the Project&lt;/h2&gt;

&lt;p&gt;Lets begin!!&lt;/p&gt;

&lt;h4 id=&quot;creating-the-project&quot;&gt;Creating the project:&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;Open Android studio and hit the button “Start a new Android Studio project”.&lt;/li&gt;
  &lt;li&gt;Enter anything in “Application name”. For ex- Chatterbox . Hit &lt;em&gt;next&lt;/em&gt; button.&lt;/li&gt;
  &lt;li&gt;Choose API level here. Google for what you should choose. Mine have API level 15. Hit &lt;em&gt;next.&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Choose “Blank Activity” in next screen and hit the &lt;em&gt;next&lt;/em&gt; button.&lt;/li&gt;
  &lt;li&gt;Click “finish” button to start your project.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;After this, android studio will bring up XML layout editor and Activity with some default code. We will be using same activity to start a chat.&lt;/p&gt;

&lt;h4 id=&quot;importing-necessary-things-i-mean-libraries&quot;&gt;Importing necessary things (I mean, libraries):&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;In the left pane of android studio, you will see lots of directory list and some files. Choose app’s build.gradle (not the one outside the app folder). See image below for reference.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[&amp;lt;img class=&quot;aligncenter size-full wp-image-138&quot; src=&quot;http://aboutashu.com/blog/wp-content/uploads/2016/04/gt1.png&quot; alt=&quot;gt1&quot; width=&quot;242&quot; height=&quot;309&quot; srcset=&quot;http://107.170.45.123/blog/wp-content/uploads/2016/04/gt1.png 242w, http://107.170.45.123/blog/wp-content/uploads/2016/04/gt1-235x300.png 235w&quot; sizes=&quot;(max-width: 242px) 100vw, 242px&quot; /&amp;gt;](http://aboutashu.com/blog/wp-content/uploads/2016/04/gt1.png)   2. Enter following code in dependencies list 
[code]
  
dependencies {
  
compile fileTree(dir: &amp;amp;#8216;libs&amp;amp;#8217;, include: [&amp;amp;#8216;*.jar&amp;amp;#8217;])
  
compile &amp;amp;#8216;com.android.support:appcompat-v7:22.2.0&amp;amp;#8217;
  
compile &quot;org.igniterealtime.smack:smack-android-extensions:4.1.0&quot;
  
compile &quot;org.igniterealtime.smack:smack-tcp:4.1.0&quot;
  
[/code]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 01 May 2016 14:09:37 +0530</pubDate>
        <link>http://aboutashu.com/implement-xmpp-chat-client-android-part-1/</link>
        <guid isPermaLink="true">http://aboutashu.com/implement-xmpp-chat-client-android-part-1/</guid>
        
        
        <category>Uncategorized</category>
        
      </item>
    
      <item>
        <title>Creating XMPP chat server</title>
        <description>&lt;p&gt;In this part of series, I am going to show you how to create an XMPP chat server.&lt;/p&gt;

&lt;p&gt;To build your own XMPP based chat solution in android, you need to have two important things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;XMPP based chat server&lt;/li&gt;
  &lt;li&gt;XMPP integration in your android code&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;XMPP chat server or XMPP server is the one that handles chat database, configurations, user, options etc. Basically, it is a chat server that handles your chat backend. What remains is to implement the chat in your own language and have fun.&lt;/p&gt;

&lt;p&gt;There are many variations of XMPP chat servers available today. You can use any of them depending on your requirements and available configurations. What I would recommend are &lt;a href=&quot;http://www.igniterealtime.org/projects/openfire/&quot;&gt;openfire&lt;/a&gt; and &lt;a href=&quot;https://www.ejabberd.im/&quot;&gt;ejabberd&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Personally, I am going to use ejabberd to setup XMPP chat server. Let’s get into action. First, you will need a web server.For now, I am using &lt;a href=&quot;https://www.digitalocean.com&quot;&gt;DigitalOcean VPS&lt;/a&gt; with Ubuntu Server 14.04 LTS installed, to host the server. Don’t worry if you do not have a VPS right now. You can still test it with your own localhost machine.&lt;/p&gt;

&lt;h2 id=&quot;installing-ejabberd&quot;&gt;Installing Ejabberd&lt;/h2&gt;

&lt;p&gt;Run following command in your terminal to update current package list.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To install &lt;strong&gt;ejabberd&lt;/strong&gt;, just enter the below command and you are done. So easy.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get -y install ejabberd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will install ejabberd and will also create a configuration file which you can edit to have your own jabberd configuration. The ejabberd configuration file can be found at &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/ejabberd/ejabberd.cfg&lt;/code&gt;. Lets edit it. Back on your terminal screen, enter this command to edit the file:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /etc/ejabberd/ejabberd.cfg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will bring up &lt;code class=&quot;highlighter-rouge&quot;&gt;nano&lt;/code&gt; editor, where you can use up and down keys on your keyboard to edit the file. For Ubuntu desktops or other graphical environments, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;gedit&lt;/code&gt;. Hence, use this command instead &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo gedit /etc/ejabberd/ejabberd.cfg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the editor screen, You’ll see a lot of text there and lot of options. Don’t panic. You only have edit 3-4 options overall. I will be doing them below, so pay attention.&lt;/p&gt;

&lt;p&gt;The ejabberd.cfg file will look something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ejabberd_cfg.png&quot; alt=&quot;ejabberd.cfg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Use your cursor to move below and find the line which has this text:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%% Admin user
{acl, admin, {user, &quot;admin&quot;, &quot;localhost&quot;}}.

%% Hostname
{hosts, [&quot;localhost&quot;]}.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Lets decode what’s written line by line so that you can get confortable enough to do this on your own next time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Admin user&lt;/strong&gt; defines what user (user must be registered with ejabberd) holds the administrative privilages of ejabberd server. &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;acl,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;admin,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{user,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;admin&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}.&lt;/span&gt;&lt;/code&gt; This line tells that user with username &lt;strong&gt;admin@localhost&lt;/strong&gt; is admin of ejabberd configuration. We can add multiple users here to make them admin. Let’s add one. So, press enter key and add similar line with different username.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;acl,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;admin,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{user,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;myusername&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The file will now look like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%% Admin user
{acl, admin, {user, &quot;admin&quot;, &quot;localhost&quot;}}.
{acl, admin, {user, &quot;myusername&quot;, &quot;localhost&quot;}}.

%% Hostname
{hosts, [&quot;localhost&quot;]}.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You might be wondering the user “myusername” isn’t yet registered with ejabberd, how come we defined here. We will registered him shortly after we are done with editing configuration file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hostname&lt;/strong&gt; defines the server at which ejabberd should listen and connect. If you are not using a local machine (i.e you are using VPS such as DigitalOcean) to host the XMPP chat server, you can mention the domain name or IP address here. I am assuming example.com as my VPS domain name, hence I will modify this line as:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;hosts,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;example.com&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]}.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Thats all the changes you have to make for now. Wasn’t that simple?
Once you have made the above changes, the cfg file will now look like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;%% Options which are set by Debconf and managed by ucf

%% Admin user
{acl, admin, {user, &quot;admin&quot;, &quot;localhost&quot;}}.
{acl, admin, {user, &quot;myusername&quot;, &quot;localhost&quot;}}

%% Hostname 
{hosts, [&quot;localhost&quot;,&quot;example.com&quot;]}. 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now exit the nano editor by pressing CTRL + X. This will prompt you if you want to overwrite the previous cfg file, press &lt;strong&gt;Y&lt;/strong&gt;, then press Enter again to confirm. This will bring you back to terminal screen.&lt;/p&gt;

&lt;p&gt;We have mentioned that “myusername” is another user holding administrative rights to ejabberd, but we still haven’t registered him yet. Lets register him as well. Enter following command to register:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ejabberdctl register myusername localhost password
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Replace “password” with whatever password you want to use to login. Once you are done with this, You have to re-start your ejabberd server by issuing this command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service ejabberd restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Congradulations, We have successfully setup our ejabberd chat server. Lets visit the administrative control panel and see what we got there. Fire up your public domain name in your favorite browser on port 5280 to login to ejabberd server: http://example.com:5280 .This will bring up webpage asking you for username and password. Login with username: myusername@localhost, password: whatever you mentioned earlier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;- The &lt;em&gt;localhost&lt;/em&gt; in above username &lt;em&gt;myusername@localhost&lt;/em&gt; represents domain name of user. If you are not sure, edit &lt;em&gt;ejabberd.cfg&lt;/em&gt; and check for user. The line, for “myusername” looks like &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;acl,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;admin,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{user,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;myusername&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;localhost&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}}&lt;/span&gt;&lt;/code&gt;, the last part is domain name.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;- For users running on local machines, you can simple use http://localhost:5280. To find your locally accessible ip address, run following command (&lt;code class=&quot;highlighter-rouge&quot;&gt;ipconfig&lt;/code&gt; for windows user):&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ifconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;and look for address in the form &lt;code class=&quot;highlighter-rouge&quot;&gt;192.168.0.xxx&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once done, following screen will show up:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://assets.digitalocean.com/articles/community/eJabberdAdmin1.png&quot; alt=&quot;ejabberd admin panel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You have now successfully installed ejabberd on your machine and can be used to connect to any XMPP based chat client. In the next post, you’ll learn how to implement XMPP chat client in android code. Have fun!!&lt;/p&gt;

&lt;p&gt;Thanks for going threw entire long post. Please like and share if you like the article. Ask anything in comments below.&lt;/p&gt;

&lt;h3 id=&quot;troubleshooting&quot;&gt;Troubleshooting:&lt;/h3&gt;

&lt;p&gt;Sometimes, ejabberd might not open up in your browser and will give &lt;code class=&quot;highlighter-rouge&quot;&gt;Connection timed out&lt;/code&gt; error. It usually happens if firewall is blocking ports on which ejabberd relies for communication stuffs. Usually those ports are 5222, 5269, 5280. You can try opening those ports like I did below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Enter following commands in terminal:&lt;/li&gt;
  &lt;li&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -A INPUT -p tcp --dport 5222 -j ACCEPT
iptables -A INPUT -p tcp --dport 5269 -j ACCEPT
iptables -A INPUT -p tcp --dport 5280 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Open up &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file. &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo nano /etc/hosts&lt;/code&gt;  and add your domain name into it (assuming your public ip address is 123.123.10.210) :&lt;/li&gt;
  &lt;li&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;123.123.10.210 example.com
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Allow ubuntu firewall&lt;/li&gt;
  &lt;li&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ufw allow 5222
sudo ufw allow 5269
sudo ufw allow 5280
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will open the ports and allow public connections, which should fix the issue.&lt;/p&gt;
</description>
        <pubDate>Sat, 30 Apr 2016 15:32:06 +0530</pubDate>
        <link>http://aboutashu.com/xmpp-chat-server/</link>
        <guid isPermaLink="true">http://aboutashu.com/xmpp-chat-server/</guid>
        
        
        <category>Uncategorized</category>
        
      </item>
    
      <item>
        <title>Get video links from Coursera</title>
        <description>&lt;p&gt;I have gone threw coursera classes now and then. What I felt is need for a coursera video downloader. I searched but couldn’t found any good working one.&lt;/p&gt;

&lt;p&gt;Hence here is a small script I developed which would give you all video links from coursera. Here is what you’ll have to do:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Goto your class. For ex- Mine was  &lt;a href=&quot;https://www.coursera.org/course/startup&quot;&gt;https://www.coursera.org/course/startup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Enroll and go to video lectures from left tab. Here is the screenshot&lt;/li&gt;
  &lt;li&gt;in chrome, press &lt;kbd&gt;f12&lt;/kbd&gt; to bring up chrome inspector. You can also right click anywhere on webpage and click &lt;strong&gt;inspect element&lt;/strong&gt;. Go to &lt;strong&gt;console&lt;/strong&gt; tab.&lt;/li&gt;
  &lt;li&gt;Paste the following script into the console:&lt;/li&gt;
  &lt;li&gt;
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ul.course-item-list-section-list &amp;gt; li&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a[data-link-type=\&quot;lecture:download.mp4\&quot;]&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;href&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Press enter and hopefully, it will parse every video link in the page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hope you’ve liked the article and it helped you. Please do comment if I owe any explanations. Share, it might be helpful to others.&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jan 2016 11:20:23 +0530</pubDate>
        <link>http://aboutashu.com/get-video-links-from-coursera/</link>
        <guid isPermaLink="true">http://aboutashu.com/get-video-links-from-coursera/</guid>
        
        <category>coursera</category>
        
        <category>download</category>
        
        <category>javascript</category>
        
        <category>jquery</category>
        
        
        <category>Javascript</category>
        
      </item>
    
      <item>
        <title>How to download multiple videos from youtube-dl</title>
        <description>&lt;p&gt;Like me, you must’ve also faced a similar situation when you needed to download multiple videos from a site. In case you’re also a frequent webnair/seminar viewer or a youtube fan, you must’ve came across a beautiful ultility called &lt;a href=&quot;https://rg3.github.io/youtube-dl&quot;&gt;Youtube-dl&lt;/a&gt; ( to download videos from your favourite sites such as youtube, vimeo etc.&lt;/p&gt;

&lt;p&gt;Here is how to download multiple videos from your favourite sites (I am using videmo as an example).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Open up a command prompt (windows) or terminal(Linux), and go to location where you want to download the videos.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt; Create a blank text file in that location. Paste your list of URLs in that file. Remember to press Enter after each link. Lets say, you named the file “download.txt”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Copy and paste the following command in your terminal/command prompt&lt;/li&gt;
  &lt;li&gt;
    &lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl -ci --batch-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;download.txt
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This will start downloading every url mentioned in the file.&lt;/p&gt;

&lt;p&gt;For me, the download speed was slow as compared to some download accelerator programs. I wanted just the download links, so I can download it via some custom made downloaders. Here is how you can output the links to another file.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl -cgi --batch-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;download.txt &amp;gt; output.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you also want the titles along with each link to be printed, just add &lt;strong&gt;-e&lt;/strong&gt; switch to above command. This will become&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;youtube-dl -cgei --batch-file&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;download.txt &amp;gt; output.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 26 Jan 2016 00:08:03 +0530</pubDate>
        <link>http://aboutashu.com/how-to-download-multiple-videos-from-youtube-dl/</link>
        <guid isPermaLink="true">http://aboutashu.com/how-to-download-multiple-videos-from-youtube-dl/</guid>
        
        <category>download</category>
        
        <category>python</category>
        
        <category>youtube-dl</category>
        
        
        <category>python</category>
        
      </item>
    
      <item>
        <title>Process Migration</title>
        <description>&lt;p&gt;A general block diagram of process in an OS looks something like this figure:&lt;/p&gt;

&lt;div style=&quot;width: 480px&quot; class=&quot;wp-caption alignnone&quot;&gt;
  &lt;img class=&quot;&quot; src=&quot;http://www.csie.ntnu.edu.tw/~swanky/os/chap4/PCB.png&quot; alt=&quot;Process Control Block diagram&quot; width=&quot;470&quot; height=&quot;830&quot; /&gt;
  
  &lt;p class=&quot;wp-caption-text&quot;&gt;
    Process Control Block diagram
  &lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Main things to consider regarding a process are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Process state&lt;/li&gt;
  &lt;li&gt;Data being used by a process&lt;/li&gt;
  &lt;li&gt;Pointers and stuff in the Program counter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To move a process to another machine, above things have to be created in the destination machine. This is what process migration is all about.&lt;/p&gt;

&lt;p&gt;Remember, process is just a program in execution. so, basically, we have to create new process with set of thread that are executing in source machine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Steps in process migration&lt;/strong&gt;–&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Source machine request destination machine if migration can happen. Known as _migration request. _After some kind of negotiation, it is granted.&lt;/li&gt;
  &lt;li&gt;The source machine then halt the process. communication is also temporarily queued so that it can later to sent to the new copy of current process in destination machine.&lt;/li&gt;
  &lt;li&gt;System then analyze and collect process’s state, which includes memory state(memory content owned by process), processor state(content in CPU registers) as well as open files or any kernel context codes(if any). Some files and kernel code are OS dependent which is not allowed for transfer.&lt;/li&gt;
  &lt;li&gt;A new process instance on destination machine is then created. The state saved in previous step is now transferred to this new instance. Sometimes, not all the states are required immediately, so they gets transferred later.&lt;/li&gt;
  &lt;li&gt;Once the sufficient amount of state transfer is done, process gets activated on destination machine.&lt;/li&gt;
  &lt;li&gt;The communication, which was being queues(in step 2), is now redirected to this new process. The queuing process runs parallel wrt STEP 3,4,5.&lt;/li&gt;
  &lt;li&gt;Sometimes, OS makes reference of migrated process, in order to control or communicate the process in future.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <pubDate>Mon, 28 Sep 2015 10:23:38 +0530</pubDate>
        <link>http://aboutashu.com/process-migration/</link>
        <guid isPermaLink="true">http://aboutashu.com/process-migration/</guid>
        
        <category>mobile computing</category>
        
        <category>mtech</category>
        
        
        <category>M.Tech</category>
        
        <category>Mobile Computing</category>
        
      </item>
    
      <item>
        <title>Mobile Computing notes</title>
        <description>&lt;p&gt;This is only a gentle introduction. I will try to cover as much as I can in further posts. Will make posts topic wise so as to cover everything related to a topic in a single post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Process Migration- &lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Act of transferring processes between two computers, through a wired or wireless medium.&lt;/li&gt;
  &lt;li&gt;A process has its process table, code segments, some data and pointers etc. This all needs to be transferred by some logic.&lt;/li&gt;
  &lt;li&gt;Used to balance load on systems. One overloaded machine can transfer process to an under-loaded one.&lt;/li&gt;
  &lt;li&gt;Originated with distributed systems. Still used in multicore(multiple processors) systems as part of process scheduling of OS.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Mobile Computing-&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Defined as &lt;em&gt;ability to use technology&lt;/em&gt;(&lt;em&gt;this part is called as computing&lt;/em&gt;) to access to some centrally located resources/information by remote and mobile devices such as  smartphones.&lt;/li&gt;
  &lt;li&gt;Mobility is divided into 3 categories:
    &lt;ol&gt;
      &lt;li&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;Macro Mobility&lt;/span&gt;: When moving into and out of a global network. Maintaining connectivity is main challenge here. &lt;em&gt;Mobile IP&lt;/em&gt; take cares for this one.&lt;/li&gt;
      &lt;li&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;Micro Mobility&lt;/span&gt;: When moving inside one region(cell) only. &lt;em&gt;Cellular IP&lt;/em&gt; take cares for this&lt;/li&gt;
      &lt;li&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt;Ad hoc Mobility&lt;/span&gt;: Refers to mobility within an Mobile Ad hoc Networks(MANET). Happens due to continuous changes in the network infrastructure. Thus, the infrastructure-less networks (&lt;em&gt;MANET&lt;/em&gt;) take cares for this one.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Major benefit is increased computation power regardless of location/infrastructure. Wether be it a office or restaurant, you’ll always be connected to remote services, thus increasing productivity.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Mobile Agents&lt;/strong&gt;–&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Programs that moves across the networks, here and there, on behalf of user.&lt;/li&gt;
  &lt;li&gt;Gathers information as well as execute automated tasks given by users.&lt;/li&gt;
  &lt;li&gt;Specifically, “&lt;em&gt;A mobile agent is a composition of computer program, data, and execution state, which is able to move from one computer to another autonomously and continue its execution on the destination computer&lt;/em&gt;“&lt;/li&gt;
  &lt;li&gt;Widely used by e-commerce industries, stock holders etc. It is a specific form of &lt;a title=&quot;Wikipedia&quot; href=&quot;https://en.wikipedia.org/wiki/Mobile_code&quot; target=&quot;_blank&quot;&gt;mobile code&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Examples are- agent Tcl, aglet etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Working (TL;DR)&lt;/strong&gt; : The program can suspend its execution at an arbitrary point, transport itself to another machine, and then resume execution from the point of suspension.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
        <pubDate>Sun, 27 Sep 2015 21:43:55 +0530</pubDate>
        <link>http://aboutashu.com/mobile-computing-notes/</link>
        <guid isPermaLink="true">http://aboutashu.com/mobile-computing-notes/</guid>
        
        <category>mobile computing</category>
        
        <category>mtech</category>
        
        
        <category>M.Tech</category>
        
        <category>Mobile Computing</category>
        
      </item>
    
      <item>
        <title>How to add wishlist to shopify</title>
        <description>&lt;p&gt;Shopify does not provide “add wishlist” feature natively. It becomes an obvious need for theme developers. So I will help you how to add wishlist to shopify.  &lt;a href=&quot;https://github.com/jimlakey/Shopify-Wish-List&quot; title=&quot;Wishlist-Shopify&quot;&gt;This Github Repo&lt;/a&gt; is all you need for a minimal effort development of this feature. So, I am going to tell how can you use the repo files and have the wishlist functionality to your shopify store.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 1&lt;/strong&gt;: Download the repo or clone it. you will get 3 files:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;wish-list.js&lt;/li&gt;
  &lt;li&gt;wishlist-page.liquid&lt;/li&gt;
  &lt;li&gt;wishlist-product.liquid&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;STEP 2&lt;/strong&gt;: Go to your shopify store’s admin panel. Navigate to your theme (http://your-store-url.com/admin/themes) and choose “Edit HTML/CSS” from the dropdown of active theme.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 3&lt;/strong&gt;: Upload wish-list.js in “assets” directory. [&lt;img src=&quot;http://codeasashu.tk/blog/wp-content/uploads/2015/07/add-assets-1024x318.jpg&quot; alt=&quot;add-assets&quot; class=&quot;aligncenter wp-image-31 size-large&quot; width=&quot;1024&quot; height=&quot;318&quot; /&gt;] Now you have to create wishlist-page.liquid and wishlist-product.liquid in snippets (just above “assets”). Create both the files and copy the contents of the same files you downloaded. [&lt;img src=&quot;http://codeasashu.tk/blog/wp-content/uploads/2015/07/wishlist.jpg&quot; alt=&quot;wishlist&quot; class=&quot;aligncenter wp-image-32 size-full&quot; width=&quot;969&quot; height=&quot;273&quot; /&gt;] Now that you’ve uploaded the 3 files to your shopify, you can forward to next step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 4&lt;/strong&gt;: Now let’s get the things running. So you need 2 things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Adding a wishlist button to product pages&lt;/li&gt;
  &lt;li&gt;Making a page where customers can view their wishlist&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So, open up product.liquid. What I’m going to do next is very important. So, make sure you do it carefully not making any mistake.&lt;/p&gt;

&lt;p&gt;Include the “wishlist-product.liquid” to get the “Add to wishlist” button. So include it as:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% include &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;wishlist-product&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can include it anywhere in product.liquid, but within “Add to cart” form. &lt;strong&gt;Make sure it is outside “Add to cart” form or it won’t work&lt;/strong&gt;. So, for a minimal example, it will go like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/cart/add&quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;post&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enctype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;multipart/form-data&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;product&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemscope&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemtype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://schema.org/Product&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemprop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;url&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ shop.url }}{{ product.url }}&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itemprop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;image&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ product | img_url: &#39;grande&#39; }}&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% if &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;images&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;main_image&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ &#39;&#39; | img_url: &#39;grande&#39; }}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;
      &amp;lt;div id=&quot;thumbnails&quot;&amp;gt;
      &amp;lt;div class=&quot;thumbs&quot;&amp;gt;&amp;lt;img src=&quot;{{ &#39;&#39; | img_url: &#39;grande&#39; }}&quot;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;thumbs&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{{ &#39;&#39; | img_url: &#39;grande&#39; }}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;
      &amp;lt;div class=&quot;thumbs&quot;&amp;gt;&amp;lt;img src=&quot;{{ &#39;&#39; | img_url: &#39;grande&#39; }}&quot;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&amp;lt;!-- #thumbnails --&amp;gt;
    &amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#images --&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% else &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% assign &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;featured_image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;selected_or_first_available_variant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;featured_image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;default: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;featured_image&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%}

&amp;lt;div id=&quot;images&quot;&amp;gt;
&amp;lt;div id=&quot;main_image&quot;&amp;gt;&amp;lt;img class=&quot;showlight&quot; src=&quot;{{ featured_image | img_url: &#39;grande&#39; }&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;div id=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thumbnails&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;
  {% if product.images.size &amp;gt; 1 %}
        {% for image in product.images %}
        {% if forloop.index &amp;lt;= 3 %} 
        &amp;lt;div class=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thumbs&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;img src=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;img_url: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;small&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;/div&amp;gt;
        {% endif %}
        {% endfor %}
  {% else %}
    &amp;lt;div class=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;thumbs&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;img src=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;img_url: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;grande&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;/div&amp;gt;
  {% endif %}
  &amp;lt;/div&amp;gt;
  {% endif %}
  &amp;lt;/div&amp;gt;

&amp;lt;div id=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;
&amp;lt;div id=&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;{{ product.title }}&amp;lt;/div&amp;gt;
  {% assign variant = product.selected_or_first_available_variant %}
          {% if product.compare_at_price &amp;gt; product.price %}
          &amp;lt;div id=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;{ variant.price | money }}&amp;lt;/div&amp;gt;
          &amp;lt;s class=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;{{ variant.compare_at_price | money }}&amp;lt;/s&amp;gt;
          {% else %}
          &amp;lt;div id=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;price2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;{{ variant.price | money }}&amp;lt;/div&amp;gt;
          {% endif %}
&amp;lt;div id=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;{{ product.description }}&amp;lt;/div&amp;gt;
  &amp;lt;div id=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;variants&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;
        &amp;lt;select id=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; name=&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;
        {% for variant in product.variants %}
          &amp;lt;option{% if variant == product.selected_or_first_available_variant %} selected{% endif %} value=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;variant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;
          {{ variant.title }} - {{ variant.price | money }}
          &amp;lt;/option&amp;gt;
        {% endfor %}
        &amp;lt;/select&amp;gt;
      &amp;lt;/div&amp;gt;     
&amp;lt;div id=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;input type=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; name=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; id=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addtocart&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; class=&quot;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;primary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; value=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;add_to_cart&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;escape&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/form&amp;gt;

{% include &#39;wishlist-product&#39; %} &amp;lt;!-- Notice this is outside the &quot;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cart&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; form --&amp;gt;
&amp;lt;/div&amp;gt;
{{ &#39;wish-list.js&#39; | asset_url | script_tag }} &amp;lt;!-- Placed at bottom of product.liquid --&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you save the file, you can see a “Add to wishlist” button on product page. Remember, you must be logged-in to make the button work. We’ve completed most of the hard part. The only thing remaining is to view the items of your wishlist.  For that, see next step.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;STEP 5&lt;/strong&gt;:  Creating a page to view wishlist items- Since there might be many pages already in your store, you should design a separate page for wishlist. Shopify provides it in much convenient way. Basic idea to get a unique page to display some unique content is to have a separate template for that page, then selecting that template in the unique page you create. Since you want wishlist page to show only wishlist items and no other bullshit, here is what you’d do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a template for wishlist. Go to “Templates” - “Add a new template”. Select “page” from the dropdown and enter “wishlist” into textbox next to it. [&lt;img src=&quot;http://codeasashu.tk/blog/wp-content/uploads/2015/07/wishlist-page.jpg&quot; alt=&quot;wishlist-page&quot; class=&quot;aligncenter wp-image-34 size-full&quot; width=&quot;1018&quot; height=&quot;281&quot; /&gt;]&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It will create a blank “page.wishlist.liquid” file. Enter following contents to it:&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;wishlist-page&#39;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;wish-list.js&#39;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;asset_url&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;script_tag&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Note that the “wish-list.js” acts as a controller to wishlist. Removing it will disable the functionality.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a page from “http://your-store-url.com/admin/pages” . Enter Title “Wishlist” and scroll down. You can see a dropdown at bottom, in the “template” section. See the screenshot below[&lt;img src=&quot;http://codeasashu.tk/blog/wp-content/uploads/2015/07/page-1024x521.jpg&quot; alt=&quot;page&quot; class=&quot;aligncenter wp-image-35 size-large&quot; width=&quot;1024&quot; height=&quot;521&quot; /&gt;]&lt;/li&gt;
  &lt;li&gt;Select “page.wishlist” from the dropdown. It is the same template you just create in previous steps. If you are not seeing any “template” section or dropdown like this, this means you have only “page.liquid” in “template” directory. Create “page.wishlist.liquid” as explained.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now that you have this page where you can view your wishlist, you have completed all the steps. Try logging in and add a product to wishlist. Go to the wishlist page you created and it will show your wishlist items.&lt;/p&gt;

&lt;p&gt;Please do comment below if you need any help.&lt;/p&gt;

</description>
        <pubDate>Thu, 09 Jul 2015 07:51:44 +0530</pubDate>
        <link>http://aboutashu.com/how-to-add-wishlist-to-shopify/</link>
        <guid isPermaLink="true">http://aboutashu.com/how-to-add-wishlist-to-shopify/</guid>
        
        <category>shopify</category>
        
        <category>theme development</category>
        
        
        <category>Shopify</category>
        
      </item>
    
      <item>
        <title>Parsing JSON with Ruby</title>
        <description>&lt;p&gt;Parsing JSON with Ruby is actually extremely easy. All you have to do is have the json gem installed (&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install json&lt;/code&gt;) and call the &lt;code class=&quot;highlighter-rouge&quot;&gt;JSON.parse&lt;/code&gt; method on the JSON data to convert it to ruby hashes. If you look at this small program here, you can see how I have implemented parsing JSON in Ruby.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env ruby&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;json&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;net/http&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;libnotify&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;parsejson&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://api.openweathermap.org/data/2.5/find?q=London&amp;amp;mode=json&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Net&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get_response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;weatherjson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weatherjson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# check for errors&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;has_key?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Error&#39;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;error with the url&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;actual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;list&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listitem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;weather&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listitem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;weather&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;weather&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weath&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listitem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;main&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;temp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;273&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%.2f&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Sun, 22 Dec 2013 22:48:23 +0530</pubDate>
        <link>http://aboutashu.com/ruby/2013/12/22/ruby-json.html</link>
        <guid isPermaLink="true">http://aboutashu.com/ruby/2013/12/22/ruby-json.html</guid>
        
        
        <category>ruby</category>
        
      </item>
    
  </channel>
</rss>
